[{"model": "challenges.challenge", "pk": 1, "fields": {"challenge_id": "oddmanout", "title": "Odd Man Out", "description": "Single out whoever came alone to your party", "content": "<div class=\"summary\">You are hosting a party with G guests and notice that there is an odd number of guests! When planning the party you deliberately invited only couples and gave each couple a unique number C on their invitation. You would like to single out whoever came alone by asking all of the guests for their invitation numbers.</div>\r\n<br>\r\n\r\n\r\n<h3 class=\"input\"><b>Input</b></h3>\r\n<div class =\"inputDesc\">The first line of input gives the number of cases, N. N test cases follow. For each test case there will be:\r\n<ul>\r\n<li>One line containing the value G the number of guests.</li>\r\n<li>One line containing a space-separated list of G integers. Each integer C indicates the invitation code of a guest.</li>\r\n</ul>\r\n</div>\r\n<br>\r\n<h3 class=\"output\"><b>Output</b></h3>\r\n<div class =\"outputDesc\">For each test case, output one line containing \u201cCase #x: \u201d followed by the number C of the guest who is alone.</div>\r\n\r\n<table class=\"sample\" summary=\"sample data\">\r\n<tbody><tr>\r\n<th>Sample Input:</th>\r\n<th>Sample Output:</th>\r\n </tr>\r\n\r\n<tr>\r\n<td>\r\n<pre>\r\n3\r\n3\r\n1 2147483647 2147483647\r\n5\r\n3 4 7 4 3\r\n5\r\n2 10 2 10 5\r\n</pre>\r\n</td>\r\n\r\n <td>\r\n<pre>\r\nCase #1: 1\r\nCase #2: 7\r\nCase #3: 5\r\n</pre>\r\n</td>\r\n</tr>\r\n</tbody></table>", "difficulty": 0.0, "submission_count": 0, "accepted_count": 0, "created": "2018-04-09T19:18:50.002Z", "tier": null, "publisher": 3, "tags": []}}, {"model": "challenges.challenge", "pk": 2, "fields": {"challenge_id": "fizzbuzz", "title": "FizzBuzz", "description": "Practice division programmatically", "content": "<div class=\"summary\">According to Wikipedia, FizzBuzz is a group word game for children to teach them about division. This may or may not be true, but this question is generally used to torture screen young computer science graduates during programming interviews.\r\n<br>\r\nBasically, this is how it works: you print the integers from 1\r\nto N, replacing any of them divisible by X with Fizz or, if they are divisible by Y, with Buzz. If the number is divisible by both X and Y, you print FizzBuzz instead.\r\n<br>\r\nCheck the samples for further clarification.</div>\r\n<br>\r\n\r\n\r\n<h3 class=\"input\"><b>Input</b></h3>\r\n<div class =\"inputDesc\">\r\nInput file will contain a single test case. Each test case will contain three integers on a single line, X, Y and N (1<=X<Y<=N<=100).\r\n</div>\r\n<br>\r\n<h3 class=\"output\"><b>Output</b></h3>\r\n<div class =\"outputDesc\">Print integers from 1 to N in order, each on its own line, replacing the ones divisible by X with Fizz, the ones divisible by Y with Buzz and ones divisible by both X and Y with FizzBuzz.\r\n</div>\r\n\r\n<table class=\"sample\" summary=\"sample data\">\r\n<tbody><tr>\r\n<th>Sample Input:</th>\r\n<th>Sample Output:</th>\r\n </tr>\r\n\r\n<tr>\r\n<td>\r\n<pre>\r\n2 3 7\r\n</pre>\r\n</td>\r\n\r\n <td>\r\n<pre>\r\n1\r\nFizz\r\nBuzz\r\nFizz\r\n5\r\nFizzBuzz\r\n7\r\n</pre>\r\n</td>\r\n</tr>\r\n</tbody></table>", "difficulty": 0.0, "submission_count": 0, "accepted_count": 0, "created": "2018-04-09T19:18:50.002Z", "tier": null, "publisher": 3, "tags": []}}, {"model": "challenges.challenge", "pk": 3, "fields": {"challenge_id": "helloworld", "title": "Hello World", "description": "Say hello to the world", "content": "<h3 class=\"input\"><b>Input</b></h3>\r\n<div class =\"inputDesc\">There is no input for this problem.</div>\r\n<br>\r\n<h3 class=\"output\"><b>Output</b></h3>\r\n<div class =\"outputDesc\">Output should contain one line, containing the string \u201cHello World!\u201d</div>", "difficulty": 0.0, "submission_count": 0, "accepted_count": 0, "created": "2018-04-09T19:18:50.002Z", "tier": null, "publisher": 3, "tags": []}}, {"model": "challenges.challenge", "pk": 4, "fields": {"challenge_id": "everywhere", "title": "I've Been Everywhere, Man", "description": "Help Alice figure out the number of cities she has visited at least once.", "content": "<div class=\"summary\">Alice travels a lot for her work. Each time she travels, she visits a single city before returning home.\r\n<br>\r\nSomeone recently asked her \u201chow many different cities have you visited for work?\u201d Thankfully Alice has kept a log of her trips. Help Alice figure out the number of cities she has visited at least once.\r\n</div>\r\n<br>\r\n\r\n\r\n<h3 class=\"input\"><b>Input</b></h3>\r\n<div class =\"inputDesc\">The first line of input contains a single positive integer T<=50 indicating the number of test cases. The first line of each test case also contains a single positive integer n indicating the number of work trips Alice has taken so far. The following n lines describe these trips. The ith such line simply contains the name of the city Alice visited on her ith trip.\r\n\r\nAlice\u2019s work only sends her to cities with simple names: city names only contain lowercase letters, have at least one letter, and do not contain spaces.\r\n\r\nThe number of trips is at most 100\r\nand no city name contains more than 20 characters.\r\n</div>\r\n<br>\r\n<h3 class=\"output\"><b>Output</b></h3>\r\n<div class =\"outputDesc\">\r\nFor each test case, simply output a single line containing a single integer that is the number of distinct cities that Alice has visited on her work trips.\r\n</div>\r\n\r\n<table class=\"sample\" summary=\"sample data\">\r\n<tbody><tr>\r\n<th>Sample Input:</th>\r\n<th>Sample Output:</th>\r\n </tr>\r\n\r\n<tr>\r\n<td>\r\n<pre>\r\n2\r\n7\r\nsaskatoon\r\ntoronto\r\nwinnipeg\r\ntoronto\r\nvancouver\r\nsaskatoon\r\ntoronto\r\n3\r\nedmonton\r\nedmonton\r\nedmonton\r\n</pre>\r\n</td>\r\n\r\n <td>\r\n<pre>\r\n4\r\n1\r\n</pre>\r\n</td>\r\n</tr>\r\n</tbody></table>", "difficulty": 0.0, "submission_count": 0, "accepted_count": 0, "created": "2018-04-09T19:18:50.002Z", "tier": null, "publisher": 3, "tags": []}}, {"model": "challenges.challenge", "pk": 5, "fields": {"challenge_id": "plantingtrees", "title": "Planting Trees", "description": "Help Jon to find out when is the earliest day when the party can take place.", "content": "<div class=\"summary\">\r\nFarmer Jon has recently bought n tree seedlings that he wants to plant in his yard. It takes 1\r\n<br>\r\nday for Jon to plant a seedling1, and for each tree Jon knows exactly in how many days after planting it grows to full maturity. Jon would also like to throw a party for his farmer friends, but in order to impress them he would like to organize the party only after all the trees have grown. More precisely, the party can be organized at earliest on the next day after the last tree has grown up.\r\n<br>\r\nHelp Jon to find out when is the earliest day when the party can take place. Jon can choose the order of planting the trees as he likes, so he wants to plant the trees in such a way that the party will be as soon as possible.\r\n</div>\r\n<br>\r\n\r\n\r\n<h3 class=\"input\"><b>Input</b></h3>\r\n<div class =\"inputDesc\">The input consists of two lines. The first line contains a single integer N (1<=N<=100000) denoting the number of seedlings. Then a line with N integers ti follows (1<=ti<=1000000), where ti denotes the number of days it takes for the ith tree to grow.\r\n</div>\r\n<br>\r\n<h3 class=\"output\"><b>Output</b></h3>\r\n<div class =\"outputDesc\">You program should output exactly one line containing one integer, denoting the earliest day when the party can be organized. The days are numbered 1,2,3,\u2026 beginning from the current moment.\r\n</div>\r\n\r\n<table class=\"sample\" summary=\"sample data\">\r\n<tbody><tr>\r\n<th>Sample Input:</th>\r\n<th>Sample Output:</th>\r\n </tr>\r\n\r\n<tr>\r\n<td>\r\n<pre>\r\n6\r\n39 38 9 35 39 20\r\n</pre>\r\n</td>\r\n\r\n <td>\r\n<pre>\r\n42\r\n</pre>\r\n</td>\r\n</tr>\r\n</tbody></table>", "difficulty": 0.0, "submission_count": 0, "accepted_count": 0, "created": "2018-04-09T19:18:50.002Z", "tier": null, "publisher": 3, "tags": []}}]